#lang racket
(define (con a b)
  (* (expt 2 a) (expt 3 b)))
(define (ca c)
  (define (ite x count)
    (if (= (remainder x 2) 0)
        (ite (/ x 2) (+ count 1))
        count))
  (ite c 0))
(define (cd c)
  (define (ite x count)
    (if (= (remainder x 3) 0)
        (ite (/ x 3) (+ count 1))
        count))
  (ite c 0))
